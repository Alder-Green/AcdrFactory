name: CD ACDR Factory DEV

on:
  workflow_run:
    workflows: ["CI ACDR Factory"]
    types:
      - completed
    conclusions:
      - success
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape pour vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape pour mettre en cache les modules Node.js
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Étape pour installer les dépendances
      - name: Install dependencies
        run: |
          npm install

      # Étape pour exécuter les tests
      - name: Run tests
        run: |
          npm test

      # Étape pour builder l'application
      - name: Build application
        run: |
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Étape pour se connecter à Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Étape pour arrêter le déploiement précédent
      - name: Stop previous deployment
        run: |
          az webapp stop --name alderfactory-dev --resource-group acdr-factory-rg

      # Étape pour supprimer le conteneur précédent
      - name: Delete previous container
        run: |
          az container delete --name alderfactory-dev --resource-group acdr-factory-rg --yes 

      # Étape pour déployer sur Azure Web App DEV
      - name: Deploy to Azure Web App DEV
        uses: azure/webapps-deploy@v2
        with:
          app-name: alderfactory-dev
          images: ${{ secrets.ACR_LOGIN_SERVER }}/acdrfactoryimg:dev-latest

      # Étape pour démarrer le nouveau déploiement
      - name: Start new deployment
        run: |
          az webapp start --name alderfactory-dev --resource-group acdr-factory-rg

      # Étape pour notifier en cas d'échec
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Le déploiement a échoué.'
            })

      # Étape pour notifier en cas de succès
      - name: Notify on success
        if: success()
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Le déploiement a réussi.'
            })
